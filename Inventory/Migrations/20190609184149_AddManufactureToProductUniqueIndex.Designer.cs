// <auto-generated />
using System;
using Inventory;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inventory.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20190609184149_AddManufactureToProductUniqueIndex")]
    partial class AddManufactureToProductUniqueIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inventory.Models.Footprint", b =>
                {
                    b.Property<int>("FootprintId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<string>("FootprintName")
                        .IsRequired();

                    b.HasKey("FootprintId");

                    b.HasIndex("FootprintName")
                        .IsUnique();

                    b.ToTable("Footprints");
                });

            modelBuilder.Entity("Inventory.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<int>("LocationId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<string>("UniqueId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId", "LocationId")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Inventory.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<string>("LocationName")
                        .IsRequired();

                    b.Property<string>("LocationUnit");

                    b.HasKey("LocationId");

                    b.HasIndex("LocationName");

                    b.HasIndex("LocationName", "LocationUnit")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Inventory.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<int?>("FootprintId");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.HasKey("ProductId");

                    b.HasIndex("FootprintId");

                    b.HasIndex("Manufacturer");

                    b.HasIndex("ProductName", "FootprintId", "Manufacturer")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Inventory.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Inventory.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<int>("Direction");

                    b.Property<int>("InventoryId");

                    b.Property<int?>("Price");

                    b.Property<int>("Quantity");

                    b.Property<int>("SupplierId");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Inventory.Models.Inventory", b =>
                {
                    b.HasOne("Inventory.Models.Location", "Location")
                        .WithMany("Inventories")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventory.Models.Product", b =>
                {
                    b.HasOne("Inventory.Models.Footprint", "Footprint")
                        .WithMany("Products")
                        .HasForeignKey("FootprintId");
                });

            modelBuilder.Entity("Inventory.Models.Transaction", b =>
                {
                    b.HasOne("Inventory.Models.Inventory", "Inventory")
                        .WithMany("Transactions")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Models.Supplier", "Supplier")
                        .WithMany("Transactions")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
